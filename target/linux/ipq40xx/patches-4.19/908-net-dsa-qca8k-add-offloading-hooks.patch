From 8402a58cd1968ce6893b17fa4615349015b333c8 Mon Sep 17 00:00:00 2001
From: John Crispin <john@phrozen.org>
Date: Tue, 1 Nov 2016 01:53:34 +0100
Subject: [PATCH 20/22] net: dsa: qca8k: add offloading hooks

Modify the driver to accomodate the requirements of the offloading code.
Do so by making the register access functions none static and calling the
init/exit functions.

Signed-off-by: John Crispin <john@phrozen.org>
---
 drivers/net/dsa/qca8k.c |   27 ++++++++++++---------------
 drivers/net/dsa/qca8k.h |   24 ++++++++++++++++++++++++
 2 files changed, 36 insertions(+), 15 deletions(-)

--- a/drivers/net/dsa/qca8k.c
+++ b/drivers/net/dsa/qca8k.c
@@ -31,6 +31,9 @@
 		.name = (_n),	\
 	}
 
+struct qca8k_priv *qca8k_priv = NULL;
+EXPORT_SYMBOL_GPL(qca8k_priv);
+
 static const struct qca8k_mib_desc ar8327_mib[] = {
 	MIB_DESC(1, 0x00, "RxBroad"),
 	MIB_DESC(1, 0x04, "RxPause"),
@@ -74,7 +77,7 @@ static const struct qca8k_mib_desc ar832
 };
 
 
-static u32
+u32
 qca8k_read(struct qca8k_priv *priv, u32 reg)
 {
 	unsigned int val;
@@ -82,14 +85,16 @@ qca8k_read(struct qca8k_priv *priv, u32
 	regmap_read(priv->base, reg, &val);
 	return val;
 }
+EXPORT_SYMBOL_GPL(qca8k_read);
 
-static void
+void
 qca8k_write(struct qca8k_priv *priv, u32 reg, u32 val)
 {
 	regmap_write(priv->base, reg, val);
 }
+EXPORT_SYMBOL_GPL(qca8k_write);
 
-static u32
+u32
 qca8k_rmw(struct qca8k_priv *priv, u32 reg, u32 mask, u32 val)
 {
 	u32 ret;
@@ -101,18 +106,7 @@ qca8k_rmw(struct qca8k_priv *priv, u32 r
 
 	return ret;
 }
-
-static void
-qca8k_reg_set(struct qca8k_priv *priv, u32 reg, u32 val)
-{
-	qca8k_rmw(priv, reg, 0, val);
-}
-
-static void
-qca8k_reg_clear(struct qca8k_priv *priv, u32 reg, u32 val)
-{
-	qca8k_rmw(priv, reg, val, 0);
-}
+EXPORT_SYMBOL_GPL(qca8k_rmw);
 
 static int
 qca8k_regmap_read(void *ctx, uint32_t reg, uint32_t *val)
@@ -1575,6 +1569,7 @@ qca8k_dsa_init_work(struct work_struct *
 
 	switch (ret) {
 	case 0:
+		qca8k_priv = priv;
 		return;
 
 	case -EPROBE_DEFER:
--- a/drivers/net/dsa/qca8k.h
+++ b/drivers/net/dsa/qca8k.h
@@ -191,6 +191,8 @@ struct ar8xxx_port_status {
 
 #define AR40XX_NUM_PORTS	6
 
+struct qca8k_offload *offload;
+
 struct qca8k_priv {
 	struct platform_device *pdev;
 	struct delayed_work dsa_init;
@@ -206,6 +208,7 @@ struct qca8k_priv {
 	struct dsa_switch *ds;
 	struct mutex reg_mutex;
 	struct device *dev;
+	struct qca8k_offload *offload;
 	u32 mac_mode;
 	u32 phy_t_status;
 
@@ -215,6 +218,7 @@ struct qca8k_priv {
 	u32 ar40xx_port_old_link[AR40XX_NUM_PORTS];
 	u32 ar40xx_port_qm_buf[AR40XX_NUM_PORTS];
 };
+extern struct qca8k_priv *qca8k_priv;
 
 struct qca8k_mib_desc {
 	unsigned int size;
@@ -230,4 +234,25 @@ struct qca8k_arl {
 	u8 mac[6];
 };
 
+u32
+qca8k_rmw(struct qca8k_priv *priv, u32 reg, u32 mask, u32 val);
+
+u32
+qca8k_read(struct qca8k_priv *priv, u32 reg);
+
+void
+qca8k_write(struct qca8k_priv *priv, u32 reg, u32 val);
+
+static inline void
+qca8k_reg_set(struct qca8k_priv *priv, u32 reg, u32 val)
+{
+	qca8k_rmw(priv, reg, 0, val);
+}
+
+static inline void
+qca8k_reg_clear(struct qca8k_priv *priv, u32 reg, u32 val)
+{
+	qca8k_rmw(priv, reg, val, 0);
+}
+
 #endif /* __QCA8K_H */
